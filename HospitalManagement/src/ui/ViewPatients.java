/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import model.Patient;
import static model.PatientDirectory.patientDirectory;

/**
 *
 * @author jhalaksurve
 */
public class ViewPatients extends javax.swing.JPanel {

    /**
     * Creates new form ViewPatients
     */
    public ViewPatients() {
        initComponents();
        
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPatient = new javax.swing.JTable();
        txtSearch = new javax.swing.JTextField();
        lblPatientId = new javax.swing.JLabel();
        lblPatientName = new javax.swing.JLabel();
        txtPatientId = new javax.swing.JTextField();
        txtPatientName = new javax.swing.JTextField();
        lblPatientAge = new javax.swing.JLabel();
        txtPatientAge = new javax.swing.JTextField();
        lblPatientGender = new javax.swing.JLabel();
        txtPatientGender = new javax.swing.JTextField();
        lblPatientEmail = new javax.swing.JLabel();
        txtPatientEmail = new javax.swing.JTextField();
        lblBloodGroup = new javax.swing.JLabel();
        txtBloodGroup = new javax.swing.JTextField();
        lblPatientCity = new javax.swing.JLabel();
        txtPatientCity = new javax.swing.JTextField();

        setBackground(new java.awt.Color(153, 204, 255));

        btnSearch.setBackground(new java.awt.Color(0, 153, 255));
        btnSearch.setFont(new java.awt.Font("Adelle Sans Devanagari", 1, 14)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(255, 255, 255));
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        tblPatient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Patient Name", "Patient ID", "Patient Age", "Patient Gender", "Blood Group", "Patient Email", "Patient City"
            }
        ));
        tblPatient.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPatientMouseClicked(evt);
            }
        });
        tblPatient.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblPatientKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblPatient);

        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        lblPatientId.setFont(new java.awt.Font("Adelle Sans Devanagari", 0, 14)); // NOI18N
        lblPatientId.setText("Patient Id");

        lblPatientName.setFont(new java.awt.Font("Adelle Sans Devanagari", 0, 14)); // NOI18N
        lblPatientName.setText("Patient Name");

        lblPatientAge.setFont(new java.awt.Font("Adelle Sans Devanagari", 0, 14)); // NOI18N
        lblPatientAge.setText("Patient Age");

        lblPatientGender.setFont(new java.awt.Font("Adelle Sans Devanagari", 0, 14)); // NOI18N
        lblPatientGender.setText("Patient Gender");

        txtPatientGender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientGenderActionPerformed(evt);
            }
        });

        lblPatientEmail.setFont(new java.awt.Font("Adelle Sans Devanagari", 0, 14)); // NOI18N
        lblPatientEmail.setText("Patient Email");

        txtPatientEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientEmailActionPerformed(evt);
            }
        });

        lblBloodGroup.setFont(new java.awt.Font("Adelle Sans Devanagari", 0, 14)); // NOI18N
        lblBloodGroup.setText("Blood Group");

        lblPatientCity.setFont(new java.awt.Font("Adelle Sans Devanagari", 0, 14)); // NOI18N
        lblPatientCity.setText("Patient City");

        txtPatientCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientCityActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 870, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPatientId)
                            .addComponent(lblPatientAge)
                            .addComponent(lblPatientEmail)
                            .addComponent(lblPatientCity))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtPatientId)
                            .addComponent(txtPatientAge)
                            .addComponent(txtPatientEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                            .addComponent(txtPatientCity))
                        .addGap(103, 103, 103)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPatientName)
                            .addComponent(lblPatientGender)
                            .addComponent(lblBloodGroup))
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtPatientName)
                            .addComponent(txtPatientGender)
                            .addComponent(txtBloodGroup, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSearch)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientId)
                    .addComponent(lblPatientName)
                    .addComponent(txtPatientId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientAge)
                    .addComponent(txtPatientAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPatientGender)
                    .addComponent(txtPatientGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBloodGroup)
                    .addComponent(txtBloodGroup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPatientEmail)
                    .addComponent(txtPatientEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientCity)
                    .addComponent(txtPatientCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(95, 95, 95))
        );
    }// </editor-fold>//GEN-END:initComponents

    //for searching through table
    
    
    private void populateTable(){
        
        
        DefaultTableModel model = (DefaultTableModel) tblPatient.getModel();
        model.setRowCount(0);
        
        for(Patient p : patientDirectory){
        
            Object[] row = new Object[10];
            
            row[0] = p;
            row[1] = p.getPatientId();
            row[2] = p.getPatientAge();
            row[3] = p.getGender();
            row[4] = p.getBloodGroup();
            row[5] = p.getPatientEmail();
            row[6] = p.getPatientCity();
            
            model.addRow(row);
        }
    }

    
    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSearchActionPerformed

    private void tblPatientMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPatientMouseClicked
        // TODO add your handling code here:
        
        int selectedRowIndex = tblPatient.getSelectedRow();
        if (selectedRowIndex<0){
        JOptionPane.showMessageDialog(this, "Select the row you want to DELETE");
        return;
        }
        DefaultTableModel model = (DefaultTableModel) tblPatient.getModel();
        Patient selectedPatient;  
         selectedPatient= (Patient) model.getValueAt(selectedRowIndex, 0);
         txtPatientName.setText(selectedPatient.getPatientName());
         txtPatientId.setText(String.valueOf(selectedPatient.getPatientId()));
         //txtPassword.setText(selectedPatient.getPatientPassword());
         txtPatientGender.setText(String.valueOf(selectedPatient.getPatientGender()));
         txtPatientEmail.setText(selectedPatient.getPatientEmail());
         txtPatientAge.setText(String.valueOf(selectedPatient.getPatientAge()));
         txtPatientCity.setText(selectedPatient.getPatientCity());
         txtBloodGroup.setText(selectedPatient.getBloodGroup());


    }//GEN-LAST:event_tblPatientMouseClicked

    private void txtPatientGenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientGenderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatientGenderActionPerformed

    private void txtPatientEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatientEmailActionPerformed

    private void txtPatientCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientCityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatientCityActionPerformed

    private void filter(String query){
        DefaultTableModel model = (DefaultTableModel) tblPatient.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
        tblPatient.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(query));
    } 
    private void tblPatientKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblPatientKeyPressed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_tblPatientKeyPressed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
        String query = txtSearch.getText();
        filter(query);
    }//GEN-LAST:event_txtSearchKeyReleased

    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearch;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBloodGroup;
    private javax.swing.JLabel lblPatientAge;
    private javax.swing.JLabel lblPatientCity;
    private javax.swing.JLabel lblPatientEmail;
    private javax.swing.JLabel lblPatientGender;
    private javax.swing.JLabel lblPatientId;
    private javax.swing.JLabel lblPatientName;
    private javax.swing.JTable tblPatient;
    private javax.swing.JTextField txtBloodGroup;
    private javax.swing.JTextField txtPatientAge;
    private javax.swing.JTextField txtPatientCity;
    private javax.swing.JTextField txtPatientEmail;
    private javax.swing.JTextField txtPatientGender;
    private javax.swing.JTextField txtPatientId;
    private javax.swing.JTextField txtPatientName;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
