/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import model.Doctor;
import model.DoctorDirectory;
import static model.DoctorDirectory.doctorDirectory;

/**
 *
 * @author jhalaksurve
 */
public class ManageDoctors extends javax.swing.JPanel {
    
    DoctorDirectory dd = new DoctorDirectory();

    /**
     * Creates new form ManageDoctors
     */
    public ManageDoctors() {
        initComponents();
        
        populateTable();
    }

    //for searching through table
                                    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
   // Doctor d= new Doctor();
            
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtDoctorId = new javax.swing.JTextField();
        lblDoctorEmail = new javax.swing.JLabel();
        lblHospitalName = new javax.swing.JLabel();
        btnSearch = new javax.swing.JButton();
        lblDoctorId = new javax.swing.JLabel();
        lblDoctorCity = new javax.swing.JLabel();
        txtDoctorName = new javax.swing.JTextField();
        lblPassword = new javax.swing.JLabel();
        lblDoctorName = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        txtSpecialization = new javax.swing.JTextField();
        txtHospitalName = new javax.swing.JTextField();
        btnDelete = new javax.swing.JButton();
        lblSpecialization = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        txtDoctorEmail = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDoctor = new javax.swing.JTable();
        txtDoctorCity = new javax.swing.JTextField();
        txtSearch = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();
        btnLogout = new javax.swing.JButton();

        lblDoctorEmail.setText("Doctor Email");

        lblHospitalName.setText("Hospital Name");

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        lblDoctorId.setText("Doctor ID");

        lblDoctorCity.setText("Doctor City");

        lblPassword.setText("Doctor Password");

        lblDoctorName.setText("Doctor Name");

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        lblSpecialization.setText("Doctor Specialization");

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        txtDoctorEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDoctorEmailActionPerformed(evt);
            }
        });

        tblDoctor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Doctor Name", "Doctor Id", "Doctor Specialization", "Doctor Email", "Hospital Name", "City"
            }
        ));
        tblDoctor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDoctorMouseClicked(evt);
            }
        });
        tblDoctor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblDoctorKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblDoctor);

        btnLogout.setText("Logout");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblDoctorCity)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                                .addComponent(txtDoctorCity, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnUpdate)
                                .addGap(18, 18, 18)
                                .addComponent(btnDelete)
                                .addGap(18, 18, 18)
                                .addComponent(btnAdd))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblDoctorEmail)
                                    .addComponent(lblDoctorId)
                                    .addComponent(lblPassword))
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtDoctorId)
                                    .addComponent(txtDoctorEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                                    .addComponent(txtPassword))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnSearch))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(90, 90, 90)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblDoctorName)
                                    .addComponent(lblSpecialization)
                                    .addComponent(lblHospitalName))
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtSpecialization, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtDoctorName, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtHospitalName, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 191, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnLogout)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnLogout)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDoctorId)
                    .addComponent(txtDoctorId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDoctorName)
                    .addComponent(txtDoctorName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPassword)
                    .addComponent(lblSpecialization)
                    .addComponent(txtSpecialization, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDoctorEmail)
                    .addComponent(txtDoctorEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblHospitalName)
                    .addComponent(txtHospitalName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDoctorCity)
                    .addComponent(txtDoctorCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete)
                    .addComponent(btnAdd)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:

        int doctorId = Integer.parseInt(txtDoctorId.getText());
        String doctorName = txtDoctorName.getText();
        String doctorPassword = txtPassword.getText();
        String doctorEmail = txtDoctorEmail.getText();
        String doctorSpecialization = txtSpecialization.getText();
        String doctorCity = txtDoctorCity.getText();
        String hospitalName = txtHospitalName.getText();

        //doctorDirectory.add(new (doctorName, doctorId, doctorPassword, doctorEmail, doctorSpecialization, doctorCity, hospitalName));
       // Doctor d = doctorDirectory.addDoctor();
       doctorDirectory.add(new Doctor(doctorName,doctorId,doctorPassword,doctorEmail,doctorSpecialization,doctorCity,hospitalName));
//        
//        d.setDoctorName(doctorName);
//        d.setDoctorId(doctorId);
//        d.setDoctorPassword(doctorPassword);
//        d.setDoctorSpecialization(doctorSpecialization);
//        d.setDoctorEmail(doctorEmail);
//        d.setHospitalName(hospitalName);
//        d.setDoctorCity(doctorCity);

        JOptionPane.showMessageDialog(this,"New Doctor added");

        populateTable();

        txtDoctorId.setText("");
        txtDoctorName.setText("");
        txtPassword.setText("");
        txtDoctorEmail.setText("");
        txtSpecialization.setText("");
        txtDoctorCity.setText("");
        txtHospitalName.setText("");

    }//GEN-LAST:event_btnAddActionPerformed

    private void txtDoctorEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDoctorEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDoctorEmailActionPerformed

    private void tblDoctorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDoctorMouseClicked
        // TODO add your handling code here:
        
        int selectedRowIndex = tblDoctor.getSelectedRow();
        if (selectedRowIndex<0){
        JOptionPane.showMessageDialog(this, "Select the row you want to DELETE");
        return;
        }
        DefaultTableModel model = (DefaultTableModel) tblDoctor.getModel();
        Doctor selectedHospital;  
         selectedHospital= (Doctor) model.getValueAt(selectedRowIndex, 0);
         txtDoctorName.setText(selectedHospital.getDoctorName());
         txtDoctorId.setText(String.valueOf(selectedHospital.getDoctorId()));
         txtPassword.setText(selectedHospital.getDoctorPassword());
         txtSpecialization.setText(selectedHospital.getDoctorSpecialization());
         txtDoctorEmail.setText(selectedHospital.getDoctorEmail());
         txtHospitalName.setText(selectedHospital.getHospitalName());
         txtDoctorCity.setText(selectedHospital.getDoctorCity());
         
    }//GEN-LAST:event_tblDoctorMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        
        DefaultTableModel tm;
        tm = (DefaultTableModel)tblDoctor.getModel();
        if(tblDoctor.getSelectedRowCount()==1){
           
     String name= txtDoctorName.getText();
     int id = Integer.parseInt(txtDoctorId.getText());
     String password = txtPassword.getText();
     String specialization = txtSpecialization.getText();
     String email = txtDoctorEmail.getText();
     String hospitalName = txtHospitalName.getText();
     String city = txtDoctorCity.getText();
     
     
     tm.setValueAt(name, tblDoctor.getSelectedRow(),0);
     tm.setValueAt(id, tblDoctor.getSelectedRow(),1);
     tm.setValueAt(specialization, tblDoctor.getSelectedRow(),2);
     tm.setValueAt(email, tblDoctor.getSelectedRow(),3);
     tm.setValueAt(hospitalName, tblDoctor.getSelectedRow(),4);
     tm.setValueAt(city, tblDoctor.getSelectedRow(),5);
     
     JOptionPane.showMessageDialog(this, "Updated Successfully");
     //populateTable();
        }
        else{
            if(tblDoctor.getRowCount() == 0){
                JOptionPane.showMessageDialog(this, "Table is empty!!");
            }
            else{
                JOptionPane.showMessageDialog(this, "Please select a single row.");
            }
        }
        
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = tblDoctor.getSelectedRow();
        
        if (selectedRowIndex < 0){
        
            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblDoctor.getModel();
        Doctor selectedDoctor = (Doctor)model.getValueAt(selectedRowIndex, 0);
        dd.deleteDoctor(selectedDoctor);
        
        txtDoctorId.setText("");
        txtDoctorName.setText("");
        txtPassword.setText("");
        txtDoctorEmail.setText("");
        txtSpecialization.setText("");
        txtDoctorCity.setText("");
        txtHospitalName.setText("");
        
        JOptionPane.showMessageDialog(this, "Doctor Deleted.");
        
        populateTable();
        
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void filter(String query){
        DefaultTableModel model = (DefaultTableModel) tblDoctor.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
        tblDoctor.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(query));
    }
    
    
    
    private void populateTable(){
        
        /*PatientDirectory pd = new PatientDirectory();
        
        pd.addNewPatient("Shubhi Miradwal",1,"shubhi123",23,'F',"shubhimiradwal2304@gmail.com","Boston","O+");
        */

        DefaultTableModel model = (DefaultTableModel) tblDoctor.getModel();
        model.setRowCount(0);
        
        for(Doctor d : doctorDirectory){
        
            Object[] row = new Object[10];
            
            row[0] = d;
            row[1] = d.getDoctorId();
            row[2] = d.getDoctorSpecialization();
            row[3] = d.getDoctorEmail();
            row[4] = d.getHospitalName();
            row[5] = d.getDoctorCity();
            
            model.addRow(row);
        }
    }
    
    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here:
        //SystemAdminDashboard sd = new SystemAdminDashboard();
        //sd.dispose();
        
        LoginJFrame lf = new LoginJFrame();
        lf.setVisible(true);
        
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void tblDoctorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblDoctorKeyPressed
        // TODO add your handling code here:
        String query = txtSearch.getText();
        filter(query);
    }//GEN-LAST:event_tblDoctorKeyPressed
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDoctorCity;
    private javax.swing.JLabel lblDoctorEmail;
    private javax.swing.JLabel lblDoctorId;
    private javax.swing.JLabel lblDoctorName;
    private javax.swing.JLabel lblHospitalName;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblSpecialization;
    private javax.swing.JTable tblDoctor;
    private javax.swing.JTextField txtDoctorCity;
    private javax.swing.JTextField txtDoctorEmail;
    private javax.swing.JTextField txtDoctorId;
    private javax.swing.JTextField txtDoctorName;
    private javax.swing.JTextField txtHospitalName;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtSpecialization;
    // End of variables declaration//GEN-END:variables
}
