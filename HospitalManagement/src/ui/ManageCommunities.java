/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import model.Community;
import static model.Community.communityDirectory;
import model.Patient;
import static model.PatientDirectory.patientDirectory;

/**
 *
 * @author jhalaksurve
 */
public class ManageCommunities extends javax.swing.JPanel {

    Community c;
    /**
     * Creates new form ManageCommunities
     */
    public ManageCommunities() {
        initComponents();
        
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnUpdate = new javax.swing.JButton();
        lblCommunityName = new javax.swing.JLabel();
        lblZipCode = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        txtCommunityName = new javax.swing.JTextField();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCommunities = new javax.swing.JTable();
        lblCity = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        txtZipCode = new javax.swing.JTextField();

        setBackground(new java.awt.Color(153, 204, 255));

        btnUpdate.setBackground(new java.awt.Color(0, 153, 255));
        btnUpdate.setFont(new java.awt.Font("Adelle Sans Devanagari", 1, 14)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        lblCommunityName.setFont(new java.awt.Font("Adelle Sans Devanagari", 0, 14)); // NOI18N
        lblCommunityName.setText("Community Name");

        lblZipCode.setFont(new java.awt.Font("Adelle Sans Devanagari", 0, 14)); // NOI18N
        lblZipCode.setText("Zip Code");

        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        btnSearch.setBackground(new java.awt.Color(0, 153, 255));
        btnSearch.setFont(new java.awt.Font("Adelle Sans Devanagari", 1, 14)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(255, 255, 255));
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        tblCommunities.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Community Name", "Community Id", "Zip Code", "City"
            }
        ));
        tblCommunities.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCommunitiesMouseClicked(evt);
            }
        });
        tblCommunities.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblCommunitiesKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblCommunities);

        lblCity.setFont(new java.awt.Font("Adelle Sans Devanagari", 0, 14)); // NOI18N
        lblCity.setText("City");

        btnAdd.setBackground(new java.awt.Color(0, 153, 255));
        btnAdd.setFont(new java.awt.Font("Adelle Sans Devanagari", 1, 14)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(0, 153, 255));
        btnDelete.setFont(new java.awt.Font("Adelle Sans Devanagari", 1, 14)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        txtZipCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtZipCodeKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnUpdate)
                                .addGap(18, 18, 18)
                                .addComponent(btnDelete)
                                .addGap(18, 18, 18)
                                .addComponent(btnAdd))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblCommunityName)
                                    .addComponent(lblCity))
                                .addGap(84, 84, 84)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCommunityName, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 133, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblZipCode)
                                .addGap(77, 77, 77)
                                .addComponent(txtZipCode, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSearch)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtZipCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblZipCode)
                    .addComponent(txtCommunityName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCommunityName))
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCity))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 84, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete)
                    .addComponent(btnAdd)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:

        DefaultTableModel tm;
        tm = (DefaultTableModel)tblCommunities.getModel();
        if(tblCommunities.getSelectedRowCount()==1){

            String name= txtCommunityName.getText();
            //     int id = Integer.parseInt(txtHospitalId.getText());
            String zipCode = txtZipCode.getText();
            String city = txtCity.getText();
            

            if(txtCommunityName.getText().isEmpty() || txtZipCode.getText().isEmpty() || txtCity.getText().isEmpty() )
            JOptionPane.showMessageDialog(this,"Please enter all the details!!");
            else{

                tm.setValueAt(name, tblCommunities.getSelectedRow(),0);
                // tm.setValueAt(id, tblHospital.getSelectedRow(),1);
                tm.setValueAt(zipCode, tblCommunities.getSelectedRow(),2);
                tm.setValueAt(city, tblCommunities.getSelectedRow(),3);
                

                JOptionPane.showMessageDialog(this, "Updated Successfully");
            }
            //populateTable();
        }
        else{
            if(tblCommunities.getRowCount() == 0){
                JOptionPane.showMessageDialog(this, "Table is empty!!");
            }
            else{
                JOptionPane.showMessageDialog(this, "Please select a single row.");
            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void filter(String query){
        DefaultTableModel model = (DefaultTableModel) tblCommunities.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
        tblCommunities.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(query));
    }
    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
        String query = txtSearch.getText();
        filter(query);
    }//GEN-LAST:event_txtSearchKeyReleased

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSearchActionPerformed

    private void tblCommunitiesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCommunitiesMouseClicked
        // TODO add your handling code here:

        int selectedRowIndex = tblCommunities.getSelectedRow();
        if (selectedRowIndex<0){
            JOptionPane.showMessageDialog(this, "Select the row you want to DELETE");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblCommunities.getModel();
        Community selectedCommunity;
        selectedCommunity= (Community) model.getValueAt(selectedRowIndex, 0);
        txtCommunityName.setText(selectedCommunity.getCommunityName());
        //txtHospitalId.setText(String.valueOf(selectedHospital.getHospitalId()));
        txtZipCode.setText(String.valueOf(selectedCommunity.getZipCode()));
        txtCity.setText(selectedCommunity.getCity());
        

    }//GEN-LAST:event_tblCommunitiesMouseClicked

    private void tblCommunitiesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblCommunitiesKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_tblCommunitiesKeyPressed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:

        //int hospitalId = Integer.parseInt(txtHospitalId.getText());
        String communityName = txtCommunityName.getText();
        long zipCode = Long.parseLong(txtZipCode.getText());
        String city = txtCity.getText();
        

        if(txtCommunityName.getText().isEmpty() || txtZipCode.getText().isEmpty() || txtCity.getText().isEmpty())
        JOptionPane.showMessageDialog(this,"Please enter all the details!!");
        else{

            communityDirectory.add(new Community( communityName, zipCode, city));

            JOptionPane.showMessageDialog(this,"New Community added");

            populateTable();

            //txtHospitalId.setText("");
            txtCommunityName.setText("");
            txtZipCode.setText("");
            txtCity.setText("");
            
        }

    }//GEN-LAST:event_btnAddActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:

        int selectedRowIndex = tblCommunities.getSelectedRow();

        if (selectedRowIndex < 0){

            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tblCommunities.getModel();
        Community selectedCommunity = (Community)model.getValueAt(selectedRowIndex, 0);
        c.deleteCommunity(selectedCommunity);

        //txtHospitalId.setText("");
        txtCommunityName.setText("");
        txtZipCode.setText("");
        txtCity.setText("");
       

        JOptionPane.showMessageDialog(this, "Community Deleted.");

        populateTable();

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void txtZipCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtZipCodeKeyPressed
        // TODO add your handling code here:
        char ch = evt.getKeyChar();
        if(Character.isLetter(ch)){
            txtZipCode.setEditable(false);
            JOptionPane.showMessageDialog(this, "Please enter number only");
        }
        else
            txtZipCode.setEditable(true);
    }//GEN-LAST:event_txtZipCodeKeyPressed


    private void populateTable(){
        
        
        DefaultTableModel model = (DefaultTableModel) tblCommunities.getModel();
        model.setRowCount(0);
        
        for(Community c : communityDirectory){
       
            Object[] row = new Object[10];
            
            row[0] = c;
            row[1] = c.getCommunityId();
            row[2] = c.getZipCode();
            row[3] = c.getCity();
            
            
            model.addRow(row);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCommunityName;
    private javax.swing.JLabel lblZipCode;
    private javax.swing.JTable tblCommunities;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtCommunityName;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtZipCode;
    // End of variables declaration//GEN-END:variables
}
