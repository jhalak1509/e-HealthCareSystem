/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import javax.swing.table.DefaultTableModel;
import model.Appointment;
import static model.AppointmentHistory.appointmentHistory;

/**
 *
 * @author jhalaksurve
 */
public class ViewAppointments extends javax.swing.JPanel {

    /**
     * Creates new form ViewAppointments
     */
    public ViewAppointments() {
        initComponents();
        
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblAppointment = new javax.swing.JTable();

        setBackground(new java.awt.Color(153, 204, 255));

        tblAppointment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Patient Name", "Patient Age", "Patient Gender", "Reason for visit", "Doctor Name", "Hospital Name", "Date", "Time"
            }
        ));
        jScrollPane1.setViewportView(tblAppointment);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 792, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(47, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(219, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    private void populateTable(){
        
        /*PatientDirectory pd = new PatientDirectory();
        
        pd.addNewPatient("Shubhi Miradwal",1,"shubhi123",23,'F',"shubhimiradwal2304@gmail.com","Boston","O+");
        */
        
        DefaultTableModel model = (DefaultTableModel) tblAppointment.getModel();
        model.setRowCount(0);
        
        for(Appointment a : appointmentHistory){
        
            Object[] row = new Object[10];
            
            row[0] = a;
            row[1] = a.getPatientAge();
            row[2] = a.getPatientGender();
            row[3] = a.getReason();
            row[4] = a.getDoctorName();
            row[5] = a.getHospitalName();
            row[6] = a.getDate();
            row[7] = a.getTime();
            
            //if(PatientDashboard.txtDoctorName.toString().equals(a.getDoctorName()) /*&& PatientDashboard.txtHospitalName.toString().equals(a.getHospitalName())*/){
            model.addRow(row);//}
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblAppointment;
    // End of variables declaration//GEN-END:variables
}
